You are a senior React + Next.js (App Router) + TailwindCSS + Framer Motion engineer.
Build a **dark theme Services page that doubles as the booking flow** for a brand called “GarageWala”.

## Tech
- Next.js 14 (TypeScript, App Router)
- TailwindCSS (dark)
- Framer Motion (scroll/hover animation)
- React Hook Form + Zod (form & validation)
- Zustand (lightweight state for cart/booking)
- Lucide-react (icons)

## Route
- Page at: /services  (this page is the primary booking flow)

## Visual Style (Dark)
- Page background: `bg-gradient-to-b from-gray-950 via-gray-900 to-black`
- Section surfaces: glassmorphism `bg-white/5 border border-white/10 backdrop-blur-xl rounded-2xl`
- Text: headings `text-white`, body `text-gray-300`, muted `text-gray-400`
- Accent gradient: `from-emerald-500 via-sky-500 to-indigo-500`
- Subtle radial glows behind hero & summary using pseudo elements

## Data (use in a data/services.ts config and map UI from it)
- VEHICLE TABS: Bike | Car
- BIKE services with price ranges (INR):
  - General Service: 400–600
  - Periodic Service: 700–1,000
  - Full Service: 1,200–1,500
  - Engine Oil Change: 300–500
  - Brake Pad Replacement: 400–700
  - Clutch Plate Replacement: 800–1,200
  - Chain & Sprocket Replacement: 1,200–1,800
  - Battery Replacement: 1,800–2,800
  - Tyre Replacement (per tyre): 1,200–2,000
  - Puncture Repair: 80–150
  - Suspension Service: 400–800
  - Electrical Repair: 150–400
  - Bike Wash + Polish: 200–400
  - Painting/Denting (per panel): 800–2,000
  - Roadside Assistance: 300–700
- CAR services with price ranges (INR):
  - General Service: 1,000–1,800
  - Periodic Service: 2,500–3,500
  - Major Service: 4,000–6,000
  - Engine Oil Change: 800–1,200
  - AC Service: 1,000–1,800
  - Brake Pad Replacement: 1,500–2,500
  - Clutch Overhaul: 3,500–5,500
  - Battery Replacement: 3,500–5,000
  - Tyre Replacement (per tyre): 2,500–4,000
  - Wheel Alignment + Balancing: 500–900
  - Suspension Work: 1,200–2,500
  - Electrical Repairs: 500–1,200
  - Car Wash + Interior Cleaning: 400–800
  - Full Car Detailing: 1,800–3,000
  - Painting/Denting (per panel): 1,200–2,500
  - Roadside Assistance: 700–1,500
- ADD-ONS (both): Pickup & Drop (150–300), Diagnosis (200–400), Emergency 2-Hour (+200–400), Extended Warranty (300–600)

## Page Layout
1) **Hero (compact)**
   - H1: “Book Doorstep Service”
   - Sub: “Affordable, transparent pricing. Certified mechanics at your home.”
   - Small gradient underline animation under H1.
   - Vehicle Tabs: Bike | Car

2) **Controls Bar**
   - City selector (Mumbai, Delhi, Bangalore, Other) with **price multipliers**:
     - Mumbai +10%, Delhi +5%, Bangalore +5%, Other 0%
   - Search box (filter services by name)
   - Toggle: Show ranges OR show “from” price

3) **Services Grid**
   - Responsive grid: `grid-cols-1 sm:grid-cols-2 lg:grid-cols-3`
   - Each **ServiceCard** shows:
     - Icon, title, short subtitle (1 line), price **range** adjusted by city
     - “Add” / “Added” button (toggles selection)
     - Motion: on enter fade-up; on hover lift+glow
   - Filters by current vehicle tab

4) **Add-Ons**
   - Chips or small cards with price (city-adjusted)
   - Click to toggle selection

5) **Booking Details (drawer on mobile, side panel on desktop)**
   - **Sticky Summary** (right on desktop, bottom drawer on mobile):
     - Selected services + add-ons list
     - Subtotal (use low end of range; show “est. ₹X–₹Y” if multiple)
     - City factor note “*Prices exclude GST; city factor applied*”
     - CTA: “Continue → Details”
   - **Step 2 – Address & Slot** (within same page, stepper style):
     - Name (required, 2–60 chars)
     - Phone (India regex `/^(\+91[-\s]?)?[6-9]\d{9}$/`)
     - Address (textarea or input)
     - City auto-filled from selector, optional pincode
     - Slot picker: radio grid (Today/Tomorrow, 10–12, 12–2, 2–4, 4–6)
     - CTA: “Share My Details”
   - **Confirmation toast/sheet**: “We’ve received your request. A mechanic will contact you shortly.” (Mock POST /api/leads)

## State & Validation
- Zustand store: selectedVehicle, city, selectedServices[], addOns[], customer (name, phone, address, pincode), slotStart/End
- Zod schemas:
  - name: 2–60 chars
  - phone: India pattern
  - address: min 8 chars
  - at least 1 service selected
  - slot required
- Form: React Hook Form with Zod resolver

## Animations
- Section wrappers use Framer Motion whileInView fade-up (`amount: 0.2`, `once: true`)
- Cards: staggered entrance; hover: `y:-4`, ring glow
- Sticky summary: subtle slide-in on open
- CTA buttons: gradient pulse on hover

## Accessibility
- Semantic headings; `aria-live="polite"` for price updates after city changes
- Buttons ≥ 44px height; focus rings visible on dark background
- Services grid as `<ul role="list">` with `<li>` cards

## Performance
- Lazy-load icons where possible
- Avoid large images; no layout shifts
- Keep LCP under 2.5s (compact hero, defer heavy art)

## Files to generate
- `app/services/page.tsx`  ← full page with hero, controls, services grid, add-ons, summary, stepper details
- `data/services.ts`       ← export arrays for BIKE, CAR, ADDONS with titles + priceMin/priceMax
- `store/booking.ts`       ← Zustand store
- `components/ServiceCard.tsx`, `components/AddonChip.tsx`, `components/Summary.tsx`, `components/SlotPicker.tsx`
- `lib/pricing.ts`         ← helper to apply city multipliers & compute totals
- `lib/validators.ts`      ← Zod schemas
- `app/api/leads/route.ts` ← mock POST that returns `{ ok: true, trackingId: "GW-" + nanoid }`

## Acceptance
- Mobile: services list first, summary as sticky bottom drawer; two taps to finish (Select → Details → Share)
- Desktop: two-pane layout (grid + right summary), smooth scroll between steps
- City change updates prices instantly
- At least 1 service + a slot + customer details required to submit
- Shows estimated total as “₹X–₹Y” where applicable
