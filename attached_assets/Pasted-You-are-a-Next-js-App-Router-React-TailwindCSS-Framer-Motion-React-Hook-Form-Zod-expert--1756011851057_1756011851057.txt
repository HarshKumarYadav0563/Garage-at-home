You are a Next.js (App Router) + React + TailwindCSS + Framer Motion + React Hook Form + Zod expert.
Implement the COMPLETE city-aware BOOKING FLOW for “Garage At Home” with NCR-only service and SEO-ready ratings.

--------------------------------
1) Routing (SEO-friendly)
--------------------------------
- Create dynamic page: /services/[vehicle]/[city]
  - vehicle ∈ { "bike", "car" }
  - city ∈ { "delhi", "gurugram", "noida", "ghaziabad", "faridabad" }
- If params invalid or city ∉ NCR → render Waitlist page/modal (noindex).
- Add /track/[trackingId] for order tracking.

--------------------------------
2) Serviceability config
--------------------------------
- src/config/serviceAreas.ts:
  - NCR_CITIES list + CITY_ALIASES (gurgaon→gurugram, ggn→gurugram)
  - helpers: normalizeCity(), isNCR()
- Export small city multipliers (e.g., delhi:0, gurugram:+5, noida:0, ghaziabad:-5, faridabad:-5).

--------------------------------
3) Booking flow (inline stepper on /services/[vehicle]/[city])
--------------------------------
Step 1 – Choose Services
- Sticky top controls: vehicle tabs (Bike/Car), city pills (5 NCR), search.
- Services grid visible ABOVE the fold.
- Compact ServiceCard:
  - title, 1-line subtitle, city-adjusted price range, “Add” toggle, “View details” (expand/collapse).
  - Hover lift (desktop), fade-up stagger on scroll.
- Sticky summary:
  - mobile: bottom drawer; desktop: right sidebar.
  - shows selected services, est. total (₹min–₹max), CTA “Continue → Details”.
- Disable Continue until ≥1 service selected.

Step 2 – Customer Details
- Fields: name (2–60), phone (India regex), email? (optional), contactPref (Call/WhatsApp).
- RHF + Zod validation; inline errors.

Step 3 – Address & Location
- Use My Location (geolocation) OR Search address (autocomplete) OR Manual (textarea + pincode).
- Must be NCR; if not → open Waitlist modal.

Step 4 – Time Slot
- Today/Tomorrow; slots: 10–12, 12–2, 2–4, 4–6; past slots disabled.

Step 5 – Review & Confirm
- Recap: vehicle, city, services + add-ons, est. total, address, slot, contact.
- Consent checkbox: share details with assigned mechanic.
- Submit: “Share My Details”.

--------------------------------
4) APIs (mock ok)
--------------------------------
- POST /api/leads:
  {
    vehicle, city,
    services: [{id,title,priceMin,priceMax}],
    addons: [{id,title,priceMin,priceMax}],
    estTotal: {min,max},
    customer: {name,phone,email?,contactPref},
    address: {text,lat?,lng?,pincode?},
    slot: {startISO,endISO}
  }
  - Validate city ∈ NCR; else { ok:false, reason:"OUT_OF_AREA" }.
  - Return { trackingId: "GW-AB12CD" }.
- GET /api/track/[id]: statuses → Received → Assigned → OnTheWay → InProgress → Done.
- POST /api/waitlist: {name,phone,city,email?}.

--------------------------------
5) UI/UX (dark theme + animation)
--------------------------------
- Page bg: bg-gradient-to-b from-gray-950 via-gray-900 to-black; glass cards (bg-white/5 border-white/10 backdrop-blur-xl rounded-2xl).
- Framer Motion:
  - Section fade-up on view (viewport once: true, amount: 0.2).
  - Cards staggered.
  - Bottom drawer slide (mobile).
- Mobile: first row of services visible without scroll; sticky tabs/city/search; summary drawer CTA.
- Desktop: two-pane layout; grid (1/2/3 cols responsive).

--------------------------------
6) Pricing data (affordable ranges)
--------------------------------
- data/services.ts: arrays for BIKE and CAR with:
  General Service (Bike ₹400–600, Car ₹1,000–1,800),
  Periodic (Bike ₹700–1,000, Car ₹2,500–3,500),
  Full/Major (Bike ₹1,200–1,500, Car ₹4,000–6,000),
  + all other items previously specified (oil, brakes, clutch, tyres, battery, AC, alignment, suspension, electrical, wash, detailing, painting, RSA).
- Add-ons: Pickup & Drop (₹150–300), Diagnosis (₹200–400), Emergency 2-hr (+₹200–400), Warranty (₹300–600).
- Helper lib/pricing.ts to apply city multipliers + compute totals.

--------------------------------
7) SEO + ratings
--------------------------------
- generateMetadata() per page:
  Title: `Doorstep {Vehicle} Service in {City} | Garage At Home (Delhi-NCR)`
  Description: `Affordable doorstep {vehicle} servicing in {city}, Delhi-NCR. Rated 4.9★ by 25,000+ customers. Transparent pricing & fast slots.`
- JSON-LD LocalBusiness + AggregateRating (4.9, 25000).
- Inline microdata rating widget under H1.
- Internal links to other 4 NCR city pages for same vehicle, and Bike↔Car for same city.
- Sitemap includes all 10 routes; non-NCR routes noindex.

--------------------------------
8) State & validation
--------------------------------
- Zustand store: vehicle, city, selectedServices[], addOns[], customer, address, slot, estTotal.
- Zod schemas for forms; block submit if invalid; debounce submits; basic rate limit by phone (server).

--------------------------------
Deliverables
--------------------------------
- app/services/[vehicle]/[city]/page.tsx (full stepper)
- app/track/[trackingId]/page.tsx (polling UI)
- src/config/serviceAreas.ts, data/services.ts, lib/pricing.ts, lib/validators.ts
- components: ServiceCard, AddonChip, SummaryDrawer/Sidebar, SlotPicker, RatingBadge
- api routes: /api/leads, /api/track/[id], /api/waitlist
- Responsive, dark, animated; services visible above the fold; NCR-only booking; SEO with ratings.
